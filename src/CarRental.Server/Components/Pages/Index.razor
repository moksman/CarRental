@page "/"

@using CarRental.Application.UseCases.City.Get
@rendermode InteractiveServer
@attribute [StreamRendering]
@inject NavigationManager NavigationManager
@inject IMediator Mediator

<PageTitle>Home</PageTitle>

<section class="hero">
    <div class="hero-inner">
        <h1>My awesome website</h1>
        <h2>Look at this website and bask in its amazing glory!</h2>
                
        <AutoComplete @bind-Value="CityName"
            TItem="City<int>"
            DataProvider="CityDataProvider"
            PropertyName="Name"                      
            Placeholder="Search a city..."
            OnChanged="(City<int> city) => OnAutoCompleteChanged(city)" />
                
            <Button Class="btn btn-dark m-1" @onclick="@(() => NavigationManager.NavigateTo($"car/prague/{currentCity.Id}"))">Search</Button>
        
    </div>

</section>


<style>
    .control-wrapper {
        margin: 30px 40px;
    }

    .example-label {
        font-size: 14px;
        margin-bottom: 6px;
    }
</style>

@code {


    public string CityName { get; set; }
    public City<int> currentCity;

    public IEnumerable<City<int>> cities;


    // protected override async Task OnInitializedAsync()
    // {
    //     cities = await Mediator.Send(new GetAllCityQuery<int>()); // call a service or an API to pull the customers
    // }

    private async Task<AutoCompleteDataProviderResult<City<int>>> CityDataProvider(AutoCompleteDataProviderRequest<City<int>> request)
    {
        if (cities is null) // pull customers only one time for client-side autocomplete
            cities = await Mediator.Send(new GetAllCityQuery<int>()); // call a service or an API to pull the customers

        return await Task.FromResult(request.ApplyTo(cities.OrderBy(c => c.Name)));
    }


    private void OnAutoCompleteChanged(City<int> city)
    {
        currentCity = city;
    }

}
