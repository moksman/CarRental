@page "/car"

@namespace CarRental.Server.Components.Pages.Car
@using System
@using CarRental.Infrastructure.Data
@using CarRental.Application.UseCases.Car.Queries.Get
@using CarRental.Application.UseCases.City.Queries.Get
@using CarRental.Core.Enums

@* Set serverrendermode parameter to false to prevent lifecycle methods (e.g. OnInitializedAsync) to run twice *@
@* @rendermode @(new InteractiveServerRenderMode(false)) *@
@rendermode InteractiveServer
@* @attribute [StreamRendering] *@

@inject IMediator Mediator

<PageTitle>Cars</PageTitle>

<div class="container-fluid content">

    @if (!(Cars?.Any() ?? false) || !(Cities?.Any() ?? false))
    {
        <p><em>Loading...</em></p>
    }
    else
    {      
        <div class="d-flex align-items-center justify-content-center ">
            <div class="btn-group  mx-2">
                <button type="button" class="btn btn-light dropdown-toggle" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">
                Sort by
                </button>
                <ul class="dropdown-menu" aria-labelledby="dropdownMenuClickableInside">
                    <li><button class="dropdown-item" type="button">Car type</button></li>
                    <li><button class="dropdown-item" type="button">Car type</button></li>
                    <li><button class="dropdown-item" type="button">Passangers</button></li>
                    <li><button class="dropdown-item" type="button">Transmission</button></li>
                </ul>
            </div>
            <div class="btn-group mx-2">
                <button type="button" class="btn btn-light dropdown-toggle" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">
                    Cities
                </button>
                <ul class="dropdown-menu" aria-labelledby="dropdownMenuClickableInside">
                    @foreach(var c in Cities)
                    {
                        @* <li>
                           <input type="button" class=@(c.IsSelected ? "dropdown-item active" : "dropdown-item")  @bind-value="@c.Name" @onclick="() => ToggleSearchCityAsActive(c)" />
                        </li> *@
                    }

                </ul>
            </div>
            <div class="btn-group mx-2">
                <button type="button" class="btn btn-light dropdown-toggle" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">
                    Car type                    
                </button>
               @*  <ul class="dropdown-menu" aria-labelledby="dropdownMenuClickableInside">
                    <li>
                        <button class="@(@SearchParametersActive.Contains(SearchParameter.VehiculeTypeCoupe) ? "dropdown-item active" : "dropdown-item")" type="button" @onclick="() => SetSearchParameterItemActive(SearchParameter.VehiculeTypeCoupe)">@SearchParameter.VehiculeTypeCoupe</button>
                        
                    </li>
                    <li>
                        <button class="@(@SearchParametersActive.Contains(SearchParameter.VehiculeTypeSport) ? "dropdown-item active" : "dropdown-item")" type="button" @onclick="() => SetSearchParameterItemActive(SearchParameter.VehiculeTypeSport)">@SearchParameter.VehiculeTypeSport</button>

                    </li>
                </ul> *@
            </div>

            <div class="btn-group mx-2">
                <button type="button" class="btn btn-light dropdown-toggle" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">
                    Passengers
                </button>
               @*  <ul class="dropdown-menu" aria-labelledby="dropdownMenuClickableInside">
                    <li>
                        <button class="@(@SearchParametersActive.Contains(SearchParameter.PassengersTwo) ? "dropdown-item active" : "dropdown-item")" type="button" @onclick="() => SetSearchParameterItemActive(SearchParameter.PassengersTwo)">@SearchParameter.PassengersTwo</button>

                    </li>
                    <li>
                        <button class="@(@SearchParametersActive.Contains(SearchParameter.PassengersFour) ? "dropdown-item active" : "dropdown-item")" type="button" @onclick="() => SetSearchParameterItemActive(SearchParameter.PassengersFour)">@SearchParameter.PassengersFour</button>

                    </li>
                </ul> *@
            </div>

            <div class="btn-group  mx-2">
                <button type="button" class="btn btn-light dropdown-toggle" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">
                    Transmission
                </button>
               @*  <ul class="dropdown-menu" aria-labelledby="dropdownMenuClickableInside">
                    <li>
                        <button class="@(@SearchParametersActive.Contains(SearchParameter.TransmissionTypeManual) ? "dropdown-item active" : "dropdown-item")" type="button" @onclick="() => SetSearchParameterItemActive(SearchParameter.TransmissionTypeManual)">@SearchParameter.TransmissionTypeManual</button>
                    </li> 
                    <li>
                        <button class="@(@SearchParametersActive.Contains(SearchParameter.TransmissionTypeAuto) ? "dropdown-item active" : "dropdown-item")" type="button" @onclick="() => SetSearchParameterItemActive(SearchParameter.TransmissionTypeAuto)">@SearchParameter.TransmissionTypeAuto</button>
                    </li>
                   
                </ul> *@
            </div>
           
            <button type="button" class="btn btn-primary">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                    <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
                </svg>
                Search
            </button>
           
        </div>                
      
        <div class="d-flex flex-row flex-wrap">
            
            @foreach (var car in Cars)
            {
                <div class="d-flex flex-column border rounded m-2 bg-white" style="min-width: 350px; max-width: 350px">

                    <div class="d-flex m-2 ">

                        <!-- Car icon -->

                        <div class="btn btn-sm btn-light mx-1">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-car-front-fill" viewBox="0 0 16 16">
                                <path d="M2.52 3.515A2.5 2.5 0 0 1 4.82 2h6.362c1 0 1.904.596 2.298 1.515l.792 1.848c.075.175.21.319.38.404.5.25.855.715.965 1.262l.335 1.679q.05.242.049.49v.413c0 .814-.39 1.543-1 1.997V13.5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1-.5-.5v-1.338c-1.292.048-2.745.088-4 .088s-2.708-.04-4-.088V13.5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1-.5-.5v-1.892c-.61-.454-1-1.183-1-1.997v-.413a2.5 2.5 0 0 1 .049-.49l.335-1.68c.11-.546.465-1.012.964-1.261a.8.8 0 0 0 .381-.404l.792-1.848ZM3 10a1 1 0 1 0 0-2 1 1 0 0 0 0 2m10 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2M6 8a1 1 0 0 0 0 2h4a1 1 0 1 0 0-2zM2.906 5.189a.51.51 0 0 0 .497.731c.91-.073 3.35-.17 4.597-.17s3.688.097 4.597.17a.51.51 0 0 0 .497-.731l-.956-1.913A.5.5 0 0 0 11.691 3H4.309a.5.5 0 0 0-.447.276L2.906 5.19Z" />
                            </svg>
                        </div>

                        
                        @if (car.Transmission == TransmissionType.MANUAL)
                        {
                            <div class="btn btn-sm btn-light">
                                <!-- Stick icon -->
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-joystick" viewBox="0 0 16 16">
                                    <path d="M10 2a2 2 0 0 1-1.5 1.937v5.087c.863.083 1.5.377 1.5.726 0 .414-.895.75-2 .75s-2-.336-2-.75c0-.35.637-.643 1.5-.726V3.937A2 2 0 1 1 10 2" />
                                    <path d="M0 9.665v1.717a1 1 0 0 0 .553.894l6.553 3.277a2 2 0 0 0 1.788 0l6.553-3.277a1 1 0 0 0 .553-.894V9.665c0-.1-.06-.19-.152-.23L9.5 6.715v.993l5.227 2.178a.125.125 0 0 1 .001.23l-5.94 2.546a2 2 0 0 1-1.576 0l-5.94-2.546a.125.125 0 0 1 .001-.23L6.5 7.708l-.013-.988L.152 9.435a.25.25 0 0 0-.152.23" />
                                </svg>
                            </div>
                        }
                        else
                        {
                       
                            <div class="btn btn-sm btn-light">
                                <!-- Automatic icon -->
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-diagram-2-fill" viewBox="0 0 16 16">
                                    <path fill-rule="evenodd" d="M6 3.5A1.5 1.5 0 0 1 7.5 2h1A1.5 1.5 0 0 1 10 3.5v1A1.5 1.5 0 0 1 8.5 6v1H11a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-1 0V8h-5v.5a.5.5 0 0 1-1 0v-1A.5.5 0 0 1 5 7h2.5V6A1.5 1.5 0 0 1 6 4.5zm-3 8A1.5 1.5 0 0 1 4.5 10h1A1.5 1.5 0 0 1 7 11.5v1A1.5 1.5 0 0 1 5.5 14h-1A1.5 1.5 0 0 1 3 12.5zm6 0a1.5 1.5 0 0 1 1.5-1.5h1a1.5 1.5 0 0 1 1.5 1.5v1a1.5 1.5 0 0 1-1.5 1.5h-1A1.5 1.5 0 0 1 9 12.5z" />
                                </svg>
                            </div>
                        }

                        @if (car.NoOfSeats == 2)
                        {
                            <div class="btn btn-sm btn-light">
                                <!-- Two icon -->
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-2-square" viewBox="0 0 16 16">
                                    <path d="M6.646 6.24v.07H5.375v-.064c0-1.213.879-2.402 2.637-2.402 1.582 0 2.613.949 2.613 2.215 0 1.002-.6 1.667-1.287 2.43l-.096.107-1.974 2.22v.077h3.498V12H5.422v-.832l2.97-3.293c.434-.475.903-1.008.903-1.705 0-.744-.557-1.236-1.313-1.236-.843 0-1.336.615-1.336 1.306" />
                                    <path d="M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2zm15 0a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1z" />
                                </svg>
                            </div>
                        }
                        else
                        {
                            <!-- Four icon -->
                            <div class="btn btn-sm btn-light">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-4-square" viewBox="0 0 16 16">
                                    <path d="M7.519 5.057q.33-.527.657-1.055h1.933v5.332h1.008v1.107H10.11V12H8.85v-1.559H4.978V9.322c.77-1.427 1.656-2.847 2.542-4.265ZM6.225 9.281v.053H8.85V5.063h-.065c-.867 1.33-1.787 2.806-2.56 4.218" />
                                    <path d="M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2zm15 0a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1z" />
                                </svg>
                            </div>
                        }
                    </div>
                    

                    <div class=" mb-auto p-2">

                        <div class="text-center">
                            <img src="@car.Image" class="img-fluid" alt="placeholder" />
                        </div>
                        <div>@car.Brand</div>
                        <div>@car.Model</div>
                        <div>@car.Description</div>
                    </div>

                    <div class="d-flex justify-content-between align-bottom p-2">
                        <a href="" class="btn btn-primary">Book</a>

                        <span>@car.Price $/day</span>

                    </div>

                </div>

            }
        </div>
    }
</div>

 

