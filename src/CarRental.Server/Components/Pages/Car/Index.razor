@page "/car"
@page "/car/{country}/{cityid:int}"

@using System.Threading
@using CarRental.Application.UseCases.Car.Get
@using CarRental.Infrastructure.Data

@rendermode InteractiveServer
@* @attribute [StreamRendering] *@

@inject IMediator Mediator

<style>
    .container {
        /* position: relative;
        width: 50%; */
        /* width: 200px */
    }

    .image {
        
    }

    .overlay {
        
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0; 

        opacity: 0;
        transition: .5s ease;
        background-color: #008CBA;
    }

    .container:hover .overlay {
        opacity: 1;
    }

    
</style>

<PageTitle>Cars</PageTitle>

<h1>Weather</h1>

<br />

@if (!(Cars?.Any() ?? false))
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container">
      <div>some text</div>
      <div class="overlay">
        <div class="text">Hello World</div>
      </div>
    </div>

    <div class="car-list">
        @foreach (var car in Cars)
        {
            <div>
                <Card Style="width:18rem;">
                    <img class="rounded-top" src="@car.Image" alt="placeholder" />
                    <CardBody>
                        <CardTitle>@car.Brand</CardTitle>
                        <CardSubTitle Class="mb-2 text-muted">@car.Model</CardSubTitle>
                        <CardText>@car.Description</CardText>
                        <Button Color="ButtonColor.Primary" To="#" Type="ButtonType.Link">Go somewhere</Button>
                    </CardBody>
                </Card>
            </div>
        }
    </div>
}

@code {

    [Parameter]
    public int CityId{ get; set; }

    [Parameter]
    public string Country { get; set; }

    private IEnumerable<Car<int>>? Cars;

    public DateTime date;
    // [Inject]
    // protected Mediator Mediator { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // if (CityId is null)
        //     Cars = await Mediator.Send(new GetAllCarQuery<int>());
        // else

        Cars = await Mediator.Send(new GetCarByCityQuery<int>(CityId));

    }


}
